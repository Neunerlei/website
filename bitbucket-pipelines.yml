clone:
  depth: 2

definitions:
  caches:
    node-custom: src/node_modules

pipelines:
  custom:
    buildAssets:
      -
        step: &buildAssets
          image: labordigital/bitbucket-pipeline-images:node-14-environment
          name: Build Assets
          caches:
            - node-custom
          script:
            - export NODE_WORKING_DIR=$BITBUCKET_CLONE_DIR/src
            - source /opt/npm-run-script-without-login.sh build
          artifacts:
            - src/webroot/dist/**
  
    buildAndPush:
      -
        step: &buildAndPush
          name: Build and Push
          image: labordigital/bitbucket-pipeline-images:build-docker-and-push-ecr
          caches:
            - docker
          services:
            - docker
          script:
            - source .env.template
            - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
            - >
              docker build -t "$DOCKER_REPO_NAME:$COMPOSE_PROJECT_NAME"
              --build-arg DOCKER_BASE_IMAGE=$DOCKER_BASE_IMAGE
              --build-arg DOCKER_BASE_TAG=$DOCKER_BASE_TAG .
            - docker push "$DOCKER_REPO_NAME:$COMPOSE_PROJECT_NAME"
    
    deployToProduction:
      -
        step: &deployToProduction
          image: labordigital/bitbucket-pipeline-images:deploy-docker-to-compose-host
          name: Deploy to production
          trigger: manual
          deployment: production
          script:
            - export DEPLOY_SSH_HOST=$DEPLOY_DEFAULT_SSH_HOST
            - source /opt/deploy-docker-to-compose-host.sh
  
  branches:
    master:
      -
        step:
          <<: *buildAssets
      -
        step:
          <<: *buildAndPush
      -
        step:
          <<: *deployToProduction